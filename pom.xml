<!--

    This file is part of Nuun IO Kernel.

    Nuun IO Kernel is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Nuun IO Kernel is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Nuun IO Kernel.  If not, see <http://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>9</version>
    </parent>

    <groupId>io.nuun</groupId>
    <artifactId>kernel</artifactId>
    <version>1.0.M8-SNAPSHOT</version>

    <modules>
        <module>core</module>
        <module>specs</module>
        <module>tests</module>
    </modules>

    <packaging>pom</packaging>

    <name>Nuun IO Kernel</name>

    <description>
        Nuun Kernel is a software kernel for framework creation. It brings a powerful plugin design plus
        a JSR 330 compliant injection mechanism backed by Guice.
        Plugin benefits from kernel capabilities by sendings request to it :
        - kernel params request :
        - Classpath scans request :on class by name, annotation, meta annotation or more generally Predicate
        - Binding Request :
        Nuun Kernel provides an SPI in order to bring IOC from other vendors.
        Nuun Kernel come with 2 plugins:
        - Configuration Plugin : a plugin that inject the good property based on @Property annotation.
        - Log plugin : a Log handler that inject the good Log implementation

    </description>

    <inceptionYear>2012</inceptionYear>

    <licenses>
        <license>
            <name>LGPL 3.0</name>
            <url>http://www.gnu.org/copyleft/lesser.html</url>
        </license>
    </licenses>

    <url>http://nuun.io/kernel</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>

        <license-check.skip>false</license-check.skip>
        <license-check.fail>true</license-check.fail>
        <license-header-check.skip>false</license-header-check.skip>
        <mycila.license-maven-plugin.version>2.10</mycila.license-maven-plugin.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.16</version>
        </dependency>

        <!-- ========================================================== -->
        <!-- ============== UNIT TEST DEPENDENCIES ==================== -->
        <!-- ========================================================== -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.8.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>1.7.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-core</artifactId>
            <version>1.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>1.5</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${basedir}</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>LICENSE</include>
                    <include>NOTICE</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.2.201409121644</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${mycila.license-maven-plugin.version}</version>
                <configuration>
                    <header>com/mycila/maven/plugin/license/templates/LGPL-3.txt</header>
                    <strictCheck>true</strictCheck>
                    <keywords>
                        <keyword>Copyright</keyword>
                    </keywords>
                    <useDefaultExcludes>true</useDefaultExcludes>
                    <excludes>
                        <exclude>LICENSE</exclude>
                        <exclude>**/*.md</exclude>
                    </excludes>
                    <skip>${license-header-check.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>check-license-header</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-distribution-javadoc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>aggregate</goal>
                            <goal>javadoc</goal>
                        </goals>
                        <configuration>
                            <doctitle>Nuun Kernel ${project.version}</doctitle>
                            <detectOfflineLinks>false</detectOfflineLinks>
                            <includeDependencySources>false</includeDependencySources>
                            <includeTransitiveDependencySources>false</includeTransitiveDependencySources>
                            <excludePackageNames>*.internal.*</excludePackageNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <scm>
        <url>https://github.com/nuun-io/kernel</url>
        <connection>scm:git:git://github.com/nuun-io/kernel.git</connection>
        <developerConnection>scm:git:git@github.com:nuun-io/kernel.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Epo Jemba</name>
            <email>epo.jemba@kametic.com</email>
            <organization>Kametic</organization>
            <organizationUrl>www.kametic.com</organizationUrl>
            <roles>
                <role>Project Owner</role>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <name>Pierre Thirouin</name>
            <email>pierre.thirouin@ext.mpsa.com</email>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

</project>
